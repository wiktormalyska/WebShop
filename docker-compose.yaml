services:

  # Frontend
  frontend:
    container_name: frontend-react
    build: ./frontend
    ports:
      - 8080:8080
      - 8081:8081
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
        - frontend-network

  # Backend
  backend:
    container_name: backend-spring
    build: ./backend
    environment:
      - DB_SERVER=database
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - 5000:5000
    volumes:
      - ./backend:/home/gradle/src
    depends_on:
      database:
        condition: service_healthy
    networks:
        - backend-network
        - frontend-network
    healthcheck:
      test: "curl --fail --silent localhost:5000/actuator/health | grep UP || exit 1"
      interval: 15s
      timeout: 5s
      retries: 4
      start_period: 15s

  # Database
  database:
    container_name: database-postgres
    image: postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./database:/docker-entrypoint-initdb.d
    networks:
        - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 4
volumes:
    node_modules:

networks:
    frontend-network:
      name: frontend-network

    backend-network:
      name: backend-network